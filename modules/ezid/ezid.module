<?php

/**
 * @file
 * Contains the ezid.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function ezid_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  if ($form_id == 'persistent_identifiers_admin_settings') {
    $form['ezid_begin_label'] = array(
      '#type' => 'markup',
      '#markup' => '<label><b>ARK</b></label><hr>',
    );
    $config = \Drupal::config('ezid.settings');
    $form['ezid_user'] = [
      '#type' => 'textfield',
      '#access' => TRUE,
      '#title' => 'EZID Username',
      '#default_value' => $config->get('ezid_user'),
      '#states' => [
        'visible' => [
          ':input[id="persistent_identifiers_minter"]' => ['value' => 'ezid.minter.ezid'],
        ],
      ],
    ];

    $form['ezid_password'] = [
      '#type' => 'password',
      '#title' => 'EZID Password',
      '#description' => t("The password used to authenticate for the API. Leave blank to make no changes, use an invalid string to disable if need be."),
      '#states' => [
        'visible' => [
          ':input[id="persistent_identifiers_minter"]' => ['value' => 'ezid.minter.ezid'],
        ],
      ],
    ];

    $form['ezid_api_endpoint'] = [
      '#type' => 'textfield',
      '#access' => TRUE,
      '#title' => 'EZID API Endpoint',
      '#default_value' => $config->get('ezid_api_endpoint'),
      '#description' => t("The API endpoint for EZID (probably won't change)."),
      '#states' => [
        'visible' => [
          ':input[id="persistent_identifiers_minter"]' => ['value' => 'ezid.minter.ezid'],
        ],
      ],
    ];

    $form['ezid_shoulder'] = [
      '#type' => 'textfield',
      '#access' => TRUE,
      '#title' => 'Namespace (shoulder)',
      '#default_value' => $config->get('ezid_shoulder'),
      '#description' => t("The NAAN namespace used for minting ARKs. E.g. 'ark:/99999/fk4cz3dh0'."),
      '#states' => [
        'visible' => [
          ':input[id="persistent_identifiers_minter"]' => ['value' => 'ezid.minter.ezid'],
        ],
      ],
    ];

    $form['ezid_end_label'] = array(
      '#type' => 'markup',
      '#markup' => '<br><br>',
    );
    // @TODO Add mapping options for metadata per bundle.
    $form['#submit'][] = 'ezid_submit';
  }
}

/**
 * Submit callback.
 *
 * Saves the value of the minter-specific field defined in the implementation
 * of hook_form_alter() above.
 *
 * @param array $form
 *   The form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state.
 */
function ezid_submit(array &$form, FormStateInterface $form_state) {
  $existing_config = \Drupal::config('ezid.settings');
  $ezid_user = $form_state->getValue('ezid_user', $existing_config->get('ezid_user'));
  $password = $form_state->getValue('ezid_password', $existing_config->get('ezid_password'));

  $ezid_api_endpoint = $form_state->getValue('ezid_api_endpoint', $existing_config->get('ezid_api_endpoint'));
  $ezid_shoulder = $form_state->getValue('ezid_shoulder', $existing_config->get('ezid_shoulder'));

  // Save password in Drupal state.
  $state = \Drupal::state();
  if (!empty($form_state->getValue('ezid_password'))) {
    $state->set('ezid.password', $form_state->getValue('ezid_password'));
  }

  $config_factory = \Drupal::configFactory();
  $config_factory->getEditable('ezid.settings')
    ->set('ezid_user', trim($ezid_user))
    ->set('ezid_api_endpoint', trim($ezid_api_endpoint))
    ->set('ezid_shoulder', trim($ezid_shoulder))
    ->save();
}
